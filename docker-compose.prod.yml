version: '3.8'

services:
  api:
    build:
      context: ./src/Pictyping.API
      dockerfile: Dockerfile
    ports:
      - "5000:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=db;Database=pictyping_production;Username=postgres;Password=${DB_PASSWORD}
      - Redis__ConnectionString=redis:6379
      - JWT__Secret=${JWT_SECRET}
      - Google__ClientId=${GOOGLE_CLIENT_ID}
      - Google__ClientSecret=${GOOGLE_CLIENT_SECRET}
    depends_on:
      - db
      - redis
    restart: unless-stopped

  web:
    build:
      context: ./src/Pictyping.Web
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    restart: unless-stopped

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=pictyping_production
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data_prod:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

volumes:
  postgres_data_prod:
  redis_data_prod: