version: '3.8'

services:
  # ASP.NET Core API (Production)
  api:
    build:
      context: .
      dockerfile: src/Pictyping.API/Dockerfile
      target: production
    ports:
      - "0.0.0.0:5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:5000
      - ConnectionStrings__DefaultConnection=${DB_CONNECTION_STRING}
      - ConnectionStrings__Redis=${REDIS_CONNECTION_STRING}
      - Jwt__Key=${JWT_SECRET_KEY}
      - Jwt__Issuer=${JWT_ISSUER}
      - Jwt__Audience=${JWT_AUDIENCE}
      - Jwt__ExpiryMinutes=${JWT_EXPIRY_MINUTES:-60}
      - Authentication__Google__ClientId=${GOOGLE_CLIENT_ID}
      - Authentication__Google__ClientSecret=${GOOGLE_CLIENT_SECRET}
    depends_on:
      - db
      - redis
    networks:
      - pictyping-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React フロントエンド (Production)
  web:
    build:
      context: .
      dockerfile: src/Pictyping.Web/Dockerfile
      target: production
      args:
        - VITE_API_URL=${VITE_API_URL:-http://api:5000}
    depends_on:
      - api
    networks:
      - pictyping-network
    restart: unless-stopped

  # PostgreSQL (Production)
  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB:-pictyping}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - pictyping-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (Production)
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "${REDIS_PASSWORD}"]
    networks:
      - pictyping-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nginx (Production)
  nginx:
    image: nginx:alpine
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - web_static:/usr/share/nginx/html:ro
    depends_on:
      - api
      - web
    networks:
      - pictyping-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  pictyping-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  web_static: